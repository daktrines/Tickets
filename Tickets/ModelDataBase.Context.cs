//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tickets
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Продажа_билетов_на_самолетEntities : DbContext
    {
        public Продажа_билетов_на_самолетEntities()
            : base("name=Продажа_билетов_на_самолетEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Авиакомпании> Авиакомпании { get; set; }
        public virtual DbSet<Аэропорты> Аэропорты { get; set; }
        public virtual DbSet<Билеты> Билеты { get; set; }
        public virtual DbSet<Пассажиры> Пассажиры { get; set; }
        public virtual DbSet<Рейсы> Рейсы { get; set; }
        public virtual DbSet<Самолеты> Самолеты { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<ВозрастПассажиров_Result> ВозрастПассажиров()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ВозрастПассажиров_Result>("ВозрастПассажиров");
        }
    
        public virtual ObjectResult<ГлавноеОкно_Result> ГлавноеОкно()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ГлавноеОкно_Result>("ГлавноеОкно");
        }
    
        public virtual ObjectResult<ГородОтправления_Result> ГородОтправления(string городОтправления)
        {
            var городОтправленияParameter = городОтправления != null ?
                new ObjectParameter("ГородОтправления", городОтправления) :
                new ObjectParameter("ГородОтправления", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ГородОтправления_Result>("ГородОтправления", городОтправленияParameter);
        }
    
        public virtual int ИзменениеТелефонаАвиакомпании(Nullable<int> кодАвиакомпании, string телефон)
        {
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            var телефонParameter = телефон != null ?
                new ObjectParameter("Телефон", телефон) :
                new ObjectParameter("Телефон", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ИзменениеТелефонаАвиакомпании", кодАвиакомпанииParameter, телефонParameter);
        }
    
        public virtual ObjectResult<МодельСамолета_Result> МодельСамолета()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<МодельСамолета_Result>("МодельСамолета");
        }
    
        public virtual int НоваяАвиакомпания(Nullable<int> кодАвиакомпании, string наименование, string телефон, string электронныйАдрес)
        {
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            var наименованиеParameter = наименование != null ?
                new ObjectParameter("Наименование", наименование) :
                new ObjectParameter("Наименование", typeof(string));
    
            var телефонParameter = телефон != null ?
                new ObjectParameter("Телефон", телефон) :
                new ObjectParameter("Телефон", typeof(string));
    
            var электронныйАдресParameter = электронныйАдрес != null ?
                new ObjectParameter("ЭлектронныйАдрес", электронныйАдрес) :
                new ObjectParameter("ЭлектронныйАдрес", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("НоваяАвиакомпания", кодАвиакомпанииParameter, наименованиеParameter, телефонParameter, электронныйАдресParameter);
        }
    
        public virtual int НовыйПассажир(Nullable<int> кодПассажира, string фамилия, string имя, string отчество, Nullable<int> серияПаспорта, Nullable<int> номерПаспорта, string мобильныйТелефон, Nullable<System.DateTime> датаРождения)
        {
            var кодПассажираParameter = кодПассажира.HasValue ?
                new ObjectParameter("КодПассажира", кодПассажира) :
                new ObjectParameter("КодПассажира", typeof(int));
    
            var фамилияParameter = фамилия != null ?
                new ObjectParameter("Фамилия", фамилия) :
                new ObjectParameter("Фамилия", typeof(string));
    
            var имяParameter = имя != null ?
                new ObjectParameter("Имя", имя) :
                new ObjectParameter("Имя", typeof(string));
    
            var отчествоParameter = отчество != null ?
                new ObjectParameter("Отчество", отчество) :
                new ObjectParameter("Отчество", typeof(string));
    
            var серияПаспортаParameter = серияПаспорта.HasValue ?
                new ObjectParameter("СерияПаспорта", серияПаспорта) :
                new ObjectParameter("СерияПаспорта", typeof(int));
    
            var номерПаспортаParameter = номерПаспорта.HasValue ?
                new ObjectParameter("НомерПаспорта", номерПаспорта) :
                new ObjectParameter("НомерПаспорта", typeof(int));
    
            var мобильныйТелефонParameter = мобильныйТелефон != null ?
                new ObjectParameter("МобильныйТелефон", мобильныйТелефон) :
                new ObjectParameter("МобильныйТелефон", typeof(string));
    
            var датаРожденияParameter = датаРождения.HasValue ?
                new ObjectParameter("ДатаРождения", датаРождения) :
                new ObjectParameter("ДатаРождения", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("НовыйПассажир", кодПассажираParameter, фамилияParameter, имяParameter, отчествоParameter, серияПаспортаParameter, номерПаспортаParameter, мобильныйТелефонParameter, датаРожденияParameter);
        }
    
        public virtual ObjectResult<ОпределеннаяДатаРейса_Result> ОпределеннаяДатаРейса()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ОпределеннаяДатаРейса_Result>("ОпределеннаяДатаРейса");
        }
    
        public virtual ObjectResult<ОпределеннаяПочтаИНомерАвиакомпании_Result> ОпределеннаяПочтаИНомерАвиакомпании(Nullable<int> кодАвиакомпании)
        {
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ОпределеннаяПочтаИНомерАвиакомпании_Result>("ОпределеннаяПочтаИНомерАвиакомпании", кодАвиакомпанииParameter);
        }
    
        public virtual ObjectResult<ОпределенныйКласс_Result> ОпределенныйКласс(string классСамолета)
        {
            var классСамолетаParameter = классСамолета != null ?
                new ObjectParameter("КлассСамолета", классСамолета) :
                new ObjectParameter("КлассСамолета", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ОпределенныйКласс_Result>("ОпределенныйКласс", классСамолетаParameter);
        }
    
        public virtual ObjectResult<СтоимостьОпределенногоРейса_Result> СтоимостьОпределенногоРейса(Nullable<int> кодРейса)
        {
            var кодРейсаParameter = кодРейса.HasValue ?
                new ObjectParameter("КодРейса", кодРейса) :
                new ObjectParameter("КодРейса", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<СтоимостьОпределенногоРейса_Result>("СтоимостьОпределенногоРейса", кодРейсаParameter);
        }
    
        public virtual int УдалениеАэропорта(Nullable<int> кодАэропорта)
        {
            var кодАэропортаParameter = кодАэропорта.HasValue ?
                new ObjectParameter("КодАэропорта", кодАэропорта) :
                new ObjectParameter("КодАэропорта", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("УдалениеАэропорта", кодАэропортаParameter);
        }
    
        public virtual int УдалениеБилета(Nullable<int> кодБилета)
        {
            var кодБилетаParameter = кодБилета.HasValue ?
                new ObjectParameter("КодБилета", кодБилета) :
                new ObjectParameter("КодБилета", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("УдалениеБилета", кодБилетаParameter);
        }
    
        public virtual ObjectResult<СамолетыПроцедура_Result> СамолетыПроцедура()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<СамолетыПроцедура_Result>("СамолетыПроцедура");
        }
    
        public virtual int НовыйСамолет(Nullable<int> кодСамолета, Nullable<int> кодАвиакомпании, string модельСамолета, Nullable<int> количествоМест)
        {
            var кодСамолетаParameter = кодСамолета.HasValue ?
                new ObjectParameter("КодСамолета", кодСамолета) :
                new ObjectParameter("КодСамолета", typeof(int));
    
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            var модельСамолетаParameter = модельСамолета != null ?
                new ObjectParameter("МодельСамолета", модельСамолета) :
                new ObjectParameter("МодельСамолета", typeof(string));
    
            var количествоМестParameter = количествоМест.HasValue ?
                new ObjectParameter("КоличествоМест", количествоМест) :
                new ObjectParameter("КоличествоМест", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("НовыйСамолет", кодСамолетаParameter, кодАвиакомпанииParameter, модельСамолетаParameter, количествоМестParameter);
        }
    
        public virtual ObjectResult<БилетыПроцедура_Result> БилетыПроцедура()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<БилетыПроцедура_Result>("БилетыПроцедура");
        }
    
        public virtual ObjectResult<ГлавнаяФорма_Result> ГлавнаяФорма()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ГлавнаяФорма_Result>("ГлавнаяФорма");
        }
    
        public virtual int НовыйСамолет1(Nullable<int> кодСамолета, Nullable<int> кодАвиакомпании, string модельСамолета, Nullable<int> количествоМест)
        {
            var кодСамолетаParameter = кодСамолета.HasValue ?
                new ObjectParameter("КодСамолета", кодСамолета) :
                new ObjectParameter("КодСамолета", typeof(int));
    
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            var модельСамолетаParameter = модельСамолета != null ?
                new ObjectParameter("МодельСамолета", модельСамолета) :
                new ObjectParameter("МодельСамолета", typeof(string));
    
            var количествоМестParameter = количествоМест.HasValue ?
                new ObjectParameter("КоличествоМест", количествоМест) :
                new ObjectParameter("КоличествоМест", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("НовыйСамолет1", кодСамолетаParameter, кодАвиакомпанииParameter, модельСамолетаParameter, количествоМестParameter);
        }
    
        public virtual ObjectResult<РейсыПроцедура_Result> РейсыПроцедура()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<РейсыПроцедура_Result>("РейсыПроцедура");
        }
    
        public virtual ObjectResult<АэропортПрибытиеРейса_Result> АэропортПрибытиеРейса(Nullable<int> raceId)
        {
            var raceIdParameter = raceId.HasValue ?
                new ObjectParameter("RaceId", raceId) :
                new ObjectParameter("RaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<АэропортПрибытиеРейса_Result>("АэропортПрибытиеРейса", raceIdParameter);
        }
    
        public virtual int НовыйСамолет2(Nullable<int> кодСамолета, Nullable<int> кодАвиакомпании, string модельСамолета, Nullable<int> количествоМест)
        {
            var кодСамолетаParameter = кодСамолета.HasValue ?
                new ObjectParameter("КодСамолета", кодСамолета) :
                new ObjectParameter("КодСамолета", typeof(int));
    
            var кодАвиакомпанииParameter = кодАвиакомпании.HasValue ?
                new ObjectParameter("КодАвиакомпании", кодАвиакомпании) :
                new ObjectParameter("КодАвиакомпании", typeof(int));
    
            var модельСамолетаParameter = модельСамолета != null ?
                new ObjectParameter("МодельСамолета", модельСамолета) :
                new ObjectParameter("МодельСамолета", typeof(string));
    
            var количествоМестParameter = количествоМест.HasValue ?
                new ObjectParameter("КоличествоМест", количествоМест) :
                new ObjectParameter("КоличествоМест", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("НовыйСамолет2", кодСамолетаParameter, кодАвиакомпанииParameter, модельСамолетаParameter, количествоМестParameter);
        }
    }
}
